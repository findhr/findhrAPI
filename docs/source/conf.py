# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import sys
import shutil
import warnings
sys.path.insert(0, os.path.abspath('.'))
sys.path.insert(0, os.path.abspath('../../src/findhr'))


automock_mock_imports = []

# Copied from shap documentation 
# make copy of notebooks in docs_old folder, as they must be here for sphinx to
# pick them up properly.
# DIRNNAME_EXAMPLE_NOTEBOOKS = 'example_notebooks'
# DIRPATH_EXAMPLE_NOTEBOOKS = os.path.abspath(DIRNNAME_EXAMPLE_NOTEBOOKS)
#
# if os.path.exists(DIRPATH_EXAMPLE_NOTEBOOKS):
#     warnings.warn(f"{DIRNNAME_EXAMPLE_NOTEBOOKS} directory exists, replacing...")
#     shutil.rmtree(DIRPATH_EXAMPLE_NOTEBOOKS)
# shutil.copytree(os.path.abspath("../../notebooks"), DIRPATH_EXAMPLE_NOTEBOOKS)

# -- Project information -----------------------------------------------------

project = 'findhrAPI'
copyright = '2024, findhr project'
author = 'FINDHR'

# The full version, including alpha/beta/rc tags
release = '1.0.0'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx_rtd_theme',
    'sphinx.ext.duration',
    'sphinx.ext.doctest',
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'numpydoc',
    "nbsphinx",  # Allows parsing Jupyter notebooks
    "myst_parser",  # Allows parsing Markdown, such as CONTRIBUTING.md
    "sphinx_github_changelog",
    'sphinx_codeautolink',  # automatic links from code to documentation
]

autodoc_default_options = {"members": True, "inherited-members": True}

# Make sure the autogenerated targets are unique
autosectionlabel_prefix_document = True

autosummary_generate = True
numpydoc_show_class_members = False

# Do not create toctree entries for each class/function
toc_object_entries = False

# These projects are also used for the sphinx_codeautolink extension:
intersphinx_mapping = {
    'IPython': ('https://ipython.readthedocs.io/en/stable/', None),
    'matplotlib': ('https://matplotlib.org/', None),
    'numpy': ('https://docs.scipy.org/doc/numpy/', None),
    'pandas': ('https://pandas.pydata.org/docs/', None),
    'python': ('https://docs.python.org/3/', None),
}

# Don't add .txt suffix to source files:
html_sourcelink_suffix = ''

# List of arguments to be passed to the kernel that executes the notebooks:
nbsphinx_execute_arguments = [
    "--InlineBackend.figure_formats={'svg', 'pdf'}",
]
# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'
# html_theme = 'furo'
html_theme = "sphinx_rtd_theme"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
